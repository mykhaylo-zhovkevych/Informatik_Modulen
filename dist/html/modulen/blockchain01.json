{
    "title": "Blockchian01 Theory",
    "mainTitle": "Blockchian01 Theory",
    "cards": [
        { "title": "Thems", "value": 5 },
        { "title": "Sections", "value": 11 },
        { "title": "Codes", "value": 20 }
    ],
    "charts": [
        {
            "type": "verzeichnis",
            "title": "Verzeichnis",
            "items": [
                { "label": "1. Kapitel01", "id": "section1" },
                { "label": "2. Kapitel02", "id": "section2" },
                { "label": "3. Kapitel03", "id": "section3" },
                { "label": "4. Kapitel03", "id": "section4" },
                { "label": "5. Kapitel04", "id": "section5" },
                { "label": "6. Kapitel05", "id": "section6" },
                { "label": "7. Kapitel", "id": "section7" },
                { "label": "8. Kapitel", "id": "section8" },
                { "label": "9. Kapitel", "id": "section9" },
                { "label": "10. Kapitel", "id": "section10" },
                { "label": "11. Kapitel", "id": "section11" },
                { "label": "12. Kapitel", "id": "section12" },
                { "label": "13. Kapitel", "id": "section13" },
                { "label": "14. Kapitel", "id": "section14" }
            ]
        }
    ],
    "mainTextContent": [
        {
            "type": "text",
            "content": "Einleitung",
            "id": "section1",
            "subContent": [
                {
                    "type": "HandlungsZiele",
                    "ziel": "Kompetenz: Applikationen und Schnittstellen objektorientiert modellieren, implementieren, testen und dokumentieren. Objekt: Anwendung mit 3 bis 5 fachlichen Klassen.",
                    "HandlungsnotwendigeKenntnisse": [
                        "Kennt den objektorientierten Ansatz mit den Grundkonzepten Kapselung, Vererbung und Polymorphie.",
                        "Kennt Vorgehensprinzipien zur Klassenfindung (z.B. Spezialisierung und Generalisierung, Domänenmodell und –Events, BoundedContext, DRY, SRP).",
                        "Kennt Abstraktionskonzepte wie Assoziationen, Klassen, Attribute und Methoden, Schnittstellen und abstrakte Klassen und Datentypen (ADT, Collections, Generics).",
                        "Kennt Beschreibungen (z.B. CRC-Card) und Diagrammnotationen (z.B. UML, TAM, 4+1) für statische und dynamische Aspekte von objektorientiertem Design.",
                        "Kennt das Dokumentieren mit einer Dokumentationsinfrastruktur (z.B. Javadoc).",
                        "Kennt den Unterschied zwischen Klassen und Objekten. Kennt eine objektorientierte Sprache und deren Elemente und kann damit das Design umsetzen.",
                        "Kennt das Konzept der dynamischen Bindung. Kennt das Konzept der Inversion of Control (DependencyInjection)",
                        "Kennt Verfahren zum Erstellen von Testfällen. Kennt Testmethoden zur Überprüfung der Komponenten einer Anwendung (automatisches Unit-Testing)."
                    ]
                },
                {
                    "type": "image",
                    "src": "/html/modulen/gettyimages-1146649674-1024x1024.webp",
                    "alt": "Descriptive Alt Text",
                    "id": "section6"
                }
                 
            ]
            
        }
    ]
}
